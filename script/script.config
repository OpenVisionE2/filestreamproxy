#!/bin/sh

IP=192.168.0.1
MODEL=vusolo2
OETOP=/openembedded/path/here
UPDIR=/home/root

CONFIG_PATH=$PWD/config.mk

function getValue() {
    IN=$1
    set -- "$IN"
    IFS="="; declare -a Array=($*)
    echo "${Array[1]}"
}

# set default config value from old config.
if [ -e $CONFIG_PATH ]; then
    IP="$(getValue `cat $CONFIG_PATH | grep 'IP='`)"
    MODEL="$(getValue `cat $CONFIG_PATH | grep 'MODEL='`)"
    OETOP="$(getValue `cat $CONFIG_PATH | grep 'OETOP='`)"
    UPDIR="$(getValue `cat $CONFIG_PATH | grep 'UPDIR='`)"
fi

# input new config.
read -p "Please, input model name [$MODEL] : " NEW_MODEL
read -p "Please, input openembeded root path [$OETOP] : " NEW_OETOP
read -p "Please, input target ip [$IP] : " NEW_IP
read -p "Please, input upload path [$UPDIR] : " NEW_UPDIR

# check new config value.
if [ ! -z $NEW_IP ]; then IP=$NEW_IP;          fi
if [ ! -z $NEW_MODEL ]; then MODEL=$NEW_MODEL; fi
if [ ! -z $NEW_OETOP ]; then OETOP=$NEW_OETOP; fi
if [ ! -z $NEW_UPDIR ]; then UPDIR=$NEW_UPDIR; fi

# backup config file.
if [ -e $CONFIG_PATH ]; then
    cp -a $CONFIG_PATH $CONFIG_PATH.bak
fi

# write config file.
echo "MODEL=$MODEL"  > $CONFIG_PATH
echo "OETOP=$OETOP" >> $CONFIG_PATH
echo ""             >> $CONFIG_PATH
echo "IP=$IP"       >> $CONFIG_PATH
echo ""             >> $CONFIG_PATH
echo "UPDIR=$UPDIR" >> $CONFIG_PATH
